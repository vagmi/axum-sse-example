name: Rust Lambda Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: "postgres:14"
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DATABASE: testdb

    steps:
    - uses: actions/checkout@v3
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v2
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: latest
    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/            
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: BinInstall Cargo SQLX CLI
      run: (curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash) && cargo binstall --no-confirm --no-symlinks sqlx-cli
    - name: Build
      run: cargo build --verbose
    - name: Create DB
      run: sqlx db create
      env:
        DATABASE_URL: postgres://postgres:password@localhost/postgres?sslmode=disable
    - name: Run tests
      run: cargo test --verbose
      env:
        DATABASE_URL: postgres://postgres:password@localhost/postgres?sslmode=disable
    - id: commit
      uses: pr-mpt/actions-commit-hash@v2
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64
        push: false
        tags: ${{ steps.commit.outputs.short }}
